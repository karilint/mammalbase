# Generated by Django 3.2.19 on 2023-05-23 07:23

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
#import django_userforeignkey.models.fields
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('mb', '0011_auto_20230513_2104'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='test',
            fields=[
                ('proximateanalysisitem_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='mb.proximateanalysisitem')),
                ('measurement_determined_by', models.CharField(blank=True, max_length=250, null=True)),
                ('measurement_remarks', models.CharField(blank=True, max_length=250, null=True)),
                ('moisture_dispersion', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('moisture_measurement_method', models.CharField(blank=True, max_length=250, null=True)),
                ('dm_dispersion', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('dm_measurement_method', models.CharField(blank=True, max_length=250, null=True)),
                ('ee_dispersion', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('ee_measurement_method', models.CharField(blank=True, max_length=250, null=True)),
                ('cp_dispersion', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('cp_measurement_method', models.CharField(blank=True, max_length=250, null=True)),
                ('cf_dispersion', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('cf_measurement_method', models.CharField(blank=True, max_length=250, null=True)),
                ('ash_dispersion', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('ash_measurement_method', models.CharField(blank=True, max_length=250, null=True)),
                ('nfe_dispersion', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('nfe_measurement_method', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('mb.proximateanalysisitem',),
        ),
        migrations.CreateModel(
            name='Historicaltest',
            fields=[
                ('proximateanalysisitem_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='mb.proximateanalysisitem')),
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_on', models.DateTimeField(blank=True, editable=False)),
                ('modified_on', models.DateTimeField(blank=True, editable=False)),
                ('history_change_reason', models.TextField(null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Is the record active')),
                ('cited_reference', models.CharField(blank=True, help_text='Enter the original reference, if not this study.', max_length=250, null=True)),
                ('sample_size', models.PositiveSmallIntegerField(blank=True, default=0, help_text='Sample size', null=True)),
                ('dm_reported', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('moisture_reported', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('cp_reported', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('ee_reported', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('cf_reported', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('ash_reported', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('nfe_reported', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('total_carbohydrates_reported', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('cp_std', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('ee_std', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('cf_std', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('ash_std', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('nfe_std', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('transformation', models.CharField(blank=True, max_length=250, null=True)),
                ('remarks', models.CharField(blank=True, help_text='Enter remarks.', max_length=250, null=True)),
                ('measurement_determined_by', models.CharField(blank=True, max_length=250, null=True)),
                ('measurement_remarks', models.CharField(blank=True, max_length=250, null=True)),
                ('moisture_dispersion', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('moisture_measurement_method', models.CharField(blank=True, max_length=250, null=True)),
                ('dm_dispersion', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('dm_measurement_method', models.CharField(blank=True, max_length=250, null=True)),
                ('ee_dispersion', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('ee_measurement_method', models.CharField(blank=True, max_length=250, null=True)),
                ('cp_dispersion', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('cp_measurement_method', models.CharField(blank=True, max_length=250, null=True)),
                ('cf_dispersion', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('cf_measurement_method', models.CharField(blank=True, max_length=250, null=True)),
                ('ash_dispersion', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('ash_measurement_method', models.CharField(blank=True, max_length=250, null=True)),
                ('nfe_dispersion', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=7, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('nfe_measurement_method', models.CharField(blank=True, max_length=250, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=models.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='The user that is automatically assigned')),
                ('forage', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='mb.fooditem')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='mb.sourcelocation')),
                ('modified_by', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=models.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='The user that is automatically assigned')),
                ('proximate_analysis', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='mb.proximateanalysis')),
            ],
            options={
                'verbose_name': 'historical test',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
