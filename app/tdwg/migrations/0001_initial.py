# Generated by Django 3.2.25 on 2024-04-23 12:02

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Taxon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scientific_name', models.CharField(help_text='The scientific name of the taxon.', max_length=50)),
                ('taxon_id', models.CharField(blank=True, help_text='An identifier for the taxon.', max_length=50, null=True)),
                ('kingdom', models.CharField(blank=True, help_text='The kingdom in which the taxon is classified.', max_length=50, null=True)),
                ('phylum', models.CharField(blank=True, help_text='The phylum in which the taxon is classified.', max_length=50, null=True)),
                ('class_name', models.CharField(blank=True, help_text='The class in which the taxon is classified.', max_length=50, null=True)),
                ('order', models.CharField(blank=True, help_text='The order in which the taxon is classified.', max_length=50, null=True)),
                ('suborder', models.CharField(blank=True, help_text='The suborder in which the taxon is classified.', max_length=50, null=True)),
                ('infraorder', models.CharField(blank=True, help_text='The infraorder in which the taxon is classified.', max_length=50, null=True)),
                ('superfamily', models.CharField(blank=True, help_text='The superfamily in which the taxon is classified.', max_length=50, null=True)),
                ('family', models.CharField(blank=True, help_text='The family in which the taxon is classified.', max_length=50, null=True)),
                ('subfamily', models.CharField(blank=True, help_text='The subfamily in which the taxon is classified.', max_length=50, null=True)),
                ('tribe', models.CharField(blank=True, help_text='The tribe in which the taxon is classified.', max_length=50, null=True)),
                ('infrageneric_epithet', models.CharField(blank=True, help_text='The infrageneric part of a binomial name at ranks above species but below genus.', max_length=50, null=True)),
                ('genus', models.CharField(blank=True, help_text='The genus in which the taxon is classified.', max_length=50, null=True)),
                ('generic_name', models.CharField(blank=True, help_text='The genus part of the scientificName without authorship.', max_length=50, null=True)),
                ('subgenus', models.CharField(blank=True, help_text='The subgenus in which the taxon is classified.', max_length=50, null=True)),
                ('specific_epithet', models.CharField(blank=True, help_text='The specific epithet of the taxon.', max_length=50, null=True)),
                ('infraspecific_epithet', models.CharField(blank=True, help_text='The infraspecific epithet of the taxon.', max_length=50, null=True)),
                ('cultivar_epithet', models.CharField(blank=True, help_text='Part of the name of a cultivar, cultivar group or grex that follows the scientific name.', max_length=50, null=True)),
                ('taxon_rank', models.CharField(blank=True, help_text='The taxonomic rank of the taxon.', max_length=50, null=True)),
                ('verbatim_taxon_rank', models.CharField(blank=True, help_text='The taxonomic rank of the taxon as provided.', max_length=50, null=True)),
                ('scientific_name_authorship', models.CharField(blank=True, help_text='The authorship information of the scientific name.', max_length=150, null=True)),
                ('vernacular_name', models.CharField(blank=True, help_text='The vernacular (common) name associated with the taxon.', max_length=50, null=True)),
                ('nomenclatural_code', models.CharField(blank=True, help_text='The nomenclatural code under which the scientificName is constructed.', max_length=50, null=True)),
                ('taxonomic_status', models.CharField(blank=True, help_text='The status of the taxon in the taxonomic hierarchy.', max_length=50, null=True)),
                ('taxon_remarks', models.TextField(blank=True, help_text='Additional information or comments about the taxon.', null=True)),
                ('parent_name_usage', models.CharField(blank=True, help_text='The name (scientificName or higherTaxon) of the parent taxon.', max_length=50, null=True)),
                ('accepted_name_usage', models.CharField(blank=True, help_text='The name (scientificName or higherTaxon) currently accepted as representing the same concept as the name.', max_length=50, null=True)),
                ('original_name_usage', models.CharField(blank=True, help_text='The originally (i.e., historically) applied name.', max_length=50, null=True)),
                ('name_published_in', models.CharField(blank=True, help_text='The literature in which the scientificName was originally established.', max_length=50, null=True)),
                ('name_according_to', models.CharField(blank=True, help_text='A reference to the source in which the taxon name is considered authoritative or correct.', max_length=50, null=True)),
                ('nomenclatural_status', models.CharField(blank=True, help_text='The status related to the original publication of the name and its conformance to the relevant rules of nomenclature. It is based essentially on an algorithm according to the business rules of the code. It requires no taxonomic opinion.', max_length=50, null=True)),
                ('name_published_in_year', models.IntegerField(blank=True, help_text='The year in which the scientificName was published.', null=True)),
                ('higher_classification', models.TextField(blank=True, help_text='A list (concatenated and separated) of taxa names terminating at the rank immediately higher than the taxon referenced in the taxon record.', null=True)),
                ('nameAccordingToID', models.CharField(blank=True, help_text='An identifier for the reference that supports the taxon name in the nameAccordingTo field.', max_length=255, null=True)),
                ('scientific_name_id', models.CharField(blank=True, help_text='An identifier for the scientific name.', max_length=255, null=True)),
                ('accepted_name_usage_id', models.CharField(blank=True, help_text='An identifier for the accepted name usage.', max_length=255, null=True)),
                ('parent_name_usage_id', models.CharField(blank=True, help_text='An identifier for the parent name usage.', max_length=255, null=True)),
                ('name_published_in_id', models.CharField(blank=True, help_text='An identifier for the publication in which the scientific name was established.', max_length=255, null=True)),
                ('taxon_concept_id', models.CharField(blank=True, help_text='An identifier for the taxon concept.', max_length=255, null=True)),
                ('original_name_usage_id', models.CharField(blank=True, help_text='An identifier for the original name usage.', max_length=255, null=True)),
                ('sort_order', models.TextField(blank=True, null=True)),
                ('display_order', models.TextField(blank=True, null=True)),
            ],
        ),
    ]
